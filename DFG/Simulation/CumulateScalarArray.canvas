{
  "objectType" : "Graph",
  "metadata" : {
    "uiTextColor" : "{\n  \"r\" : 20,\n  \"g\" : 20,\n  \"b\" : 20\n  }",
    "uiNodeColor" : "{\n  \"r\" : 121,\n  \"g\" : 134,\n  \"b\" : 143\n  }",
    "timeline_start" : "1",
    "timeline_simMode" : "0",
    "uiTooltip" : "Cumulates scalar array value over time.",
    "timeline_end" : "250",
    "uiGraphPan" : "{\n  \"x\" : -442.7892280025117,\n  \"y\" : -229.3235150532928\n  }",
    "camera_mat44" : "{\n  \"row0\" : {\n    \"x\" : 0.7999999523162842,\n    \"y\" : -0.2228344082832336,\n    \"z\" : 0.5570860505104065,\n    \"t\" : 30\n    },\n  \"row1\" : {\n    \"x\" : -1.490116119384766e-08,\n    \"y\" : 0.9284766912460327,\n    \"z\" : 0.3713906705379486,\n    \"t\" : 20\n    },\n  \"row2\" : {\n    \"x\" : -0.6000000834465027,\n    \"y\" : -0.2971125543117523,\n    \"z\" : 0.7427813410758972,\n    \"t\" : 40\n    },\n  \"row3\" : {\n    \"x\" : 0,\n    \"y\" : 0,\n    \"z\" : 0,\n    \"t\" : 1\n    }\n  }",
    "uiGraphZoom" : "{\n  \"value\" : 0.8468241691589356\n  }",
    "timeline_loopMode" : "1",
    "camera_focalDistance" : "53.85164642333984",
    "timeline_current" : "1"
    },
  "title" : "CumulateScalarArray",
  "ports" : [
    {
      "objectType" : "ExecPort",
      "name" : "exec",
      "nodePortType" : "IO",
      "defaultValues" : {
        "Execute" : {}
        },
      "execPortType" : "IO",
      "typeSpec" : "Execute"
      },
    {
      "objectType" : "ExecPort",
      "metadata" : {},
      "name" : "initial",
      "nodePortType" : "Out",
      "defaultValues" : {
        "Scalar" : 0,
        "Scalar[]" : []
        },
      "execPortType" : "In",
      "typeSpec" : "Scalar[]"
      },
    {
      "objectType" : "ExecPort",
      "metadata" : {},
      "name" : "value",
      "nodePortType" : "Out",
      "defaultValues" : {
        "Vec3" : {
          "x" : 0,
          "y" : 0,
          "z" : 0
          },
        "Scalar" : 0,
        "Scalar[]" : []
        },
      "execPortType" : "In",
      "typeSpec" : "Scalar[]"
      },
    {
      "objectType" : "ExecPort",
      "name" : "reset",
      "nodePortType" : "Out",
      "defaultValues" : {
        "Boolean" : false
        },
      "execPortType" : "In",
      "typeSpec" : "Boolean"
      },
    {
      "objectType" : "ExecPort",
      "metadata" : {},
      "name" : "result",
      "nodePortType" : "In",
      "defaultValues" : {
        "Vec3" : {
          "x" : 0,
          "y" : 0,
          "z" : 0
          },
        "Scalar" : 0,
        "Scalar[]" : []
        },
      "execPortType" : "Out",
      "typeSpec" : "Scalar[]"
      }
    ],
  "extDeps" : {},
  "presetGUID" : "FF03C0E6D7032DAE70E140227827202F",
  "nodes" : [
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":936.541342378,\"y\":486.68795228}"
        },
      "name" : "If",
      "ports" : [
        {
          "objectType" : "InstPort",
          "name" : "exec",
          "nodePortType" : "IO"
          },
        {
          "objectType" : "InstPort",
          "name" : "cond",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "if_true",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "if_false",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "result",
          "nodePortType" : "Out"
          }
        ],
      "executable" : "Fabric.Core.Control.If",
      "presetGUID" : "3182A478A21643455D549E483D35F831"
      },
    {
      "objectType" : "Get",
      "metadata" : {
        "uiGraphPos" : "{\"x\":557.771838427,\"y\":543.367603064}"
        },
      "name" : "get",
      "ports" : [
        {
          "objectType" : "GetPort",
          "name" : "value",
          "nodePortType" : "Out"
          }
        ],
      "varPath" : "valueVar"
      },
    {
      "objectType" : "Set",
      "metadata" : {
        "uiGraphPos" : "{\"x\":1108.56612432,\"y\":570.132860661}"
        },
      "name" : "set",
      "ports" : [
        {
          "objectType" : "SetPort",
          "name" : "value",
          "nodePortType" : "IO"
          }
        ],
      "varPath" : "valueVar"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":785.038094521,\"y\":564.843933344}"
        },
      "name" : "Add_2",
      "ports" : [
        {
          "objectType" : "InstPort",
          "name" : "exec",
          "nodePortType" : "IO"
          },
        {
          "objectType" : "InstPort",
          "name" : "lhs",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "rhs",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "result",
          "nodePortType" : "Out"
          }
        ],
      "executable" : "Fabric.Core.Array.Add",
      "presetGUID" : "73DE7C05CEF60BE7FC6B48D0E22673A7"
      },
    {
      "objectType" : "Var",
      "metadata" : {
        "uiGraphPos" : "{\"x\":991.692508698,\"y\":386.530680656}"
        },
      "name" : "valueVar",
      "ports" : [
        {
          "objectType" : "VarPort",
          "name" : "value",
          "nodePortType" : "IO"
          }
        ],
      "dataType" : "Scalar[]"
      }
    ],
  "connections" : {
    "initial" : [
      "If.if_true"
      ],
    "value" : [
      "Add_2.rhs"
      ],
    "reset" : [
      "If.cond"
      ],
    "If.result" : [
      "set.value"
      ],
    "get.value" : [
      "Add_2.lhs"
      ],
    "set.value" : [
      "result"
      ],
    "Add_2.result" : [
      "If.if_false"
      ]
    },
  "requiredPresets" : {
    "Fabric.Core.Control.If" : {
      "objectType" : "Func",
      "title" : "If",
      "ports" : [
        {
          "objectType" : "ExecPort",
          "name" : "exec",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "ExecPort",
          "name" : "cond",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "ExecPort",
          "name" : "if_true",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "ExecPort",
          "name" : "if_false",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "ExecPort",
          "name" : "result",
          "nodePortType" : "In",
          "execPortType" : "Out",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "3182A478A21643455D549E483D35F831",
      "code" : "
dfgEntry {
	result = cond ? if_true : if_false;
}
"
      },
    "Fabric.Core.Array.Add" : {
      "objectType" : "Func",
      "title" : "Add[]",
      "ports" : [
        {
          "objectType" : "ExecPort",
          "name" : "exec",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "ExecPort",
          "name" : "lhs",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "ExecPort",
          "name" : "rhs",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "ExecPort",
          "name" : "result",
          "nodePortType" : "In",
          "execPortType" : "Out",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "73DE7C05CEF60BE7FC6B48D0E22673A7",
      "code" : "
operator core_array_add_task<<<index>>>($TYPE$ lhs, $TYPE$ rhs, io $TYPE$ result) {
  result[index] = lhs[index < lhs.size() ? index : lhs.size() - 1] + rhs[index < rhs.size() ? index : rhs.size() - 1];
}

dfgEntry {
  if(lhs.size() == 0) return;
  if(rhs.size() == 0) return;
  Size size = lhs.size() > rhs.size() ? lhs.size() : rhs.size();
  result.resize(size);

  if(size < 10000)
  {
    for(Size i=0;i<size;i++)
      core_array_add_task(i, lhs, rhs, result);
  }
  else
  {
    core_array_add_task<<<size>>>(lhs, rhs, result);
  }
}
"
      }
    }
  }