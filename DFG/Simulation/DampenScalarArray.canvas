{
  "objectType" : "Graph",
  "metadata" : {
    "uiTextColor" : "{\n  \"r\" : 20,\n  \"g\" : 20,\n  \"b\" : 20\n  }",
    "uiNodeColor" : "{\n  \"r\" : 121,\n  \"g\" : 134,\n  \"b\" : 143\n  }",
    "timeline_start" : "1",
    "uiGraphZoom" : "{\n  \"value\" : 0.9195402264595032\n  }",
    "timeline_loopMode" : "1",
    "timeline_simMode" : "0",
    "camera_mat44" : "{\n  \"row0\" : {\n    \"x\" : 0.7999999523162842,\n    \"y\" : -0.2228344082832336,\n    \"z\" : 0.5570860505104065,\n    \"t\" : 30\n    },\n  \"row1\" : {\n    \"x\" : -1.490116119384766e-08,\n    \"y\" : 0.9284766912460327,\n    \"z\" : 0.3713906705379486,\n    \"t\" : 20\n    },\n  \"row2\" : {\n    \"x\" : -0.6000000834465027,\n    \"y\" : -0.2971125543117523,\n    \"z\" : 0.7427813410758972,\n    \"t\" : 40\n    },\n  \"row3\" : {\n    \"x\" : 0,\n    \"y\" : 0,\n    \"z\" : 0,\n    \"t\" : 1\n    }\n  }",
    "uiTooltip" : "Blends the current value with an average of previous values, by a certain factor. A factor of 0 means only previous values will be used, a factor of 1 means only current values will be used. When resetting the node the first value is used as the average of all previous values.",
    "timeline_current" : "1",
    "camera_focalDistance" : "53.85164642333984",
    "timeline_end" : "250",
    "uiGraphPan" : "{\n  \"x\" : -1023.001831054688,\n  \"y\" : -16.39271545410156\n  }"
    },
  "title" : "DampenScalarArray",
  "ports" : [
    {
      "objectType" : "ExecPort",
      "name" : "exec",
      "nodePortType" : "IO",
      "defaultValues" : {
        "Execute" : {}
        },
      "execPortType" : "IO",
      "typeSpec" : "Execute"
      },
    {
      "objectType" : "ExecPort",
      "name" : "value",
      "nodePortType" : "Out",
      "defaultValues" : {
        "Vec3" : {
          "x" : 0,
          "y" : 0,
          "z" : 0
          },
        "Quat" : {
          "v" : {
            "x" : 0,
            "y" : 0,
            "z" : 0
            },
          "w" : 1
          },
        "Xfo[]" : [],
        "Scalar[]" : []
        },
      "execPortType" : "In",
      "typeSpec" : "Scalar[]"
      },
    {
      "objectType" : "ExecPort",
      "name" : "factor",
      "nodePortType" : "Out",
      "defaultValues" : {
        "Scalar" : 0.300000011920929
        },
      "execPortType" : "In",
      "typeSpec" : "Scalar"
      },
    {
      "objectType" : "ExecPort",
      "name" : "reset",
      "nodePortType" : "Out",
      "defaultValues" : {
        "Boolean" : false
        },
      "execPortType" : "In",
      "typeSpec" : "Boolean"
      },
    {
      "objectType" : "ExecPort",
      "name" : "result",
      "nodePortType" : "In",
      "defaultValues" : {
        "Vec3" : {
          "x" : 0,
          "y" : 0,
          "z" : 0
          },
        "Quat" : {
          "v" : {
            "x" : 0,
            "y" : 0,
            "z" : 0
            },
          "w" : 1
          },
        "Xfo[]" : [],
        "Scalar[]" : []
        },
      "execPortType" : "Out",
      "typeSpec" : "Scalar[]"
      }
    ],
  "extDeps" : {},
  "presetGUID" : "23AA51A55C52BD0AE7BCEC854A7D7094",
  "nodes" : [
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":1474.31445312,\"y\":264.016998291}"
        },
      "name" : "If",
      "ports" : [
        {
          "objectType" : "InstPort",
          "name" : "exec",
          "nodePortType" : "IO"
          },
        {
          "objectType" : "InstPort",
          "name" : "cond",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "if_true",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "if_false",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "result",
          "nodePortType" : "Out"
          }
        ],
      "executable" : "Fabric.Core.Control.If",
      "presetGUID" : "3182A478A21643455D549E483D35F831"
      },
    {
      "objectType" : "Set",
      "metadata" : {
        "uiGraphPos" : "{\"x\":1609.31445312,\"y\":264.016998291}"
        },
      "name" : "set",
      "ports" : [
        {
          "objectType" : "SetPort",
          "name" : "value",
          "nodePortType" : "IO"
          }
        ],
      "varPath" : "valueVar"
      },
    {
      "objectType" : "Get",
      "metadata" : {
        "uiGraphPos" : "{\"x\":1138.61440408,\"y\":245.529444695}"
        },
      "name" : "get",
      "ports" : [
        {
          "objectType" : "GetPort",
          "name" : "value",
          "nodePortType" : "Out"
          }
        ],
      "varPath" : "valueVar"
      },
    {
      "objectType" : "Var",
      "metadata" : {
        "uiGraphPos" : "{\"x\":1484.43952703,\"y\":103.73959446}"
        },
      "name" : "valueVar",
      "ports" : [
        {
          "objectType" : "VarPort",
          "name" : "value",
          "nodePortType" : "IO"
          }
        ],
      "dataType" : "Scalar[]"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":1288.68957615,\"y\":257.077157736}"
        },
      "name" : "LinearInterpolateArray_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "name" : "exec",
          "nodePortType" : "IO"
          },
        {
          "objectType" : "InstPort",
          "name" : "this",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "other",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "t",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "result",
          "nodePortType" : "Out"
          }
        ],
      "executable" : "Fabric.Exts.Math.Func.LinearInterpolateArray",
      "presetGUID" : "18106EF6D37632C1481973598A9A886C"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":1150.57668746,\"y\":350.602481127}"
        },
      "name" : "Fill_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "name" : "exec",
          "nodePortType" : "IO"
          },
        {
          "objectType" : "InstPort",
          "name" : "element",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "count",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "array",
          "nodePortType" : "Out"
          }
        ],
      "executable" : "Fabric.Core.Array.Fill",
      "presetGUID" : "323379311384B0227037BF839A4A49C9"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":1001.58913863,\"y\":358.214846849}"
        },
      "name" : "Size_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "name" : "exec",
          "nodePortType" : "IO"
          },
        {
          "objectType" : "InstPort",
          "name" : "this",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "result",
          "nodePortType" : "Out"
          }
        ],
      "executable" : "Fabric.Exts.Geometry.Func.Size",
      "presetGUID" : "3426735D9D96DD0F52A2A961A393053A"
      }
    ],
  "connections" : {
    "value" : [
      "If.if_true",
      "LinearInterpolateArray_1.other",
      "Size_1.this",
      "valueVar.value"
      ],
    "factor" : [
      "Fill_1.element"
      ],
    "reset" : [
      "If.cond"
      ],
    "If.result" : [
      "set.value"
      ],
    "set.value" : [
      "result"
      ],
    "get.value" : [
      "LinearInterpolateArray_1.this"
      ],
    "LinearInterpolateArray_1.result" : [
      "If.if_false"
      ],
    "Fill_1.array" : [
      "LinearInterpolateArray_1.t"
      ],
    "Size_1.result" : [
      "Fill_1.count"
      ]
    },
  "requiredPresets" : {
    "Fabric.Core.Control.If" : {
      "objectType" : "Func",
      "title" : "If",
      "ports" : [
        {
          "objectType" : "ExecPort",
          "name" : "exec",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "ExecPort",
          "name" : "cond",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "ExecPort",
          "name" : "if_true",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "ExecPort",
          "name" : "if_false",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "ExecPort",
          "name" : "result",
          "nodePortType" : "In",
          "execPortType" : "Out",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "3182A478A21643455D549E483D35F831",
      "code" : "
dfgEntry {
	result = cond ? if_true : if_false;
}
"
      },
    "Fabric.Exts.Math.Func.LinearInterpolateArray" : {
      "objectType" : "Func",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 99,\n  \"g\" : 129,\n  \"b\" : 92\n  }",
        "uiTooltip" : "Linearly interpolates a scalar value with another based on a blend (0.0 to 1.0)\n\n Supported by Float32,Float64,RGB,RGBA,ARGB,Color,Vec2,Vec3,Vec4,Quat,Xfo"
        },
      "title" : "LinearInterpolate[]",
      "ports" : [
        {
          "objectType" : "ExecPort",
          "name" : "exec",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "ExecPort",
          "name" : "this",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Float32[]" : [
              0
              ]
            },
          "execPortType" : "In",
          "typeSpec" : "$TYPE$[]"
          },
        {
          "objectType" : "ExecPort",
          "name" : "other",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Float32[]" : [
              0
              ]
            },
          "execPortType" : "In",
          "typeSpec" : "$TYPE$[]"
          },
        {
          "objectType" : "ExecPort",
          "metadata" : {
            "uiRange" : "(0, 1)"
            },
          "name" : "t",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Scalar[]" : [
              0
              ]
            },
          "execPortType" : "In",
          "typeSpec" : "Scalar[]"
          },
        {
          "objectType" : "ExecPort",
          "name" : "result",
          "nodePortType" : "In",
          "execPortType" : "Out",
          "typeSpec" : "$TYPE$[]"
          }
        ],
      "extDeps" : {
        "Math" : "*"
        },
      "presetGUID" : "18106EF6D37632C1481973598A9A886C",
      "code" : "require Math;

operator Math_Float32_linearInterpolate_task<<<index>>>(
  io $TYPE$[] result
, in $TYPE$[] this
, in $TYPE$[] other
, in Scalar[] t
) {
  result[index] = this[index < this.size() ? index : this.size() - 1].linearInterpolate(other[index < other.size() ? index : other.size() - 1], t[index < t.size() ? index : t.size() - 1]);
}

dfgEntry {
  if( this.size() == 0) return;
  if( other.size() == 0) return;
  if( t.size() == 0) return;
  Size task_size = this.size();
  if(task_size < other.size()) task_size = other.size();
  if(task_size < t.size()) task_size = t.size();
  result.resize(task_size);
  if(task_size < 10000 /* pex margin */) {
    for(Size index = 0; index < task_size; index++) {
      Math_Float32_linearInterpolate_task(index, result, this, other, t);
    }
  } else {
    Math_Float32_linearInterpolate_task<<<task_size>>>(result, this, other, t);
  }
}
"
      },
    "Fabric.Core.Array.Fill" : {
      "objectType" : "Func",
      "title" : "Fill[]",
      "ports" : [
        {
          "objectType" : "ExecPort",
          "name" : "exec",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "ExecPort",
          "name" : "element",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "ExecPort",
          "name" : "count",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "SInt32"
          },
        {
          "objectType" : "ExecPort",
          "name" : "array",
          "nodePortType" : "In",
          "execPortType" : "Out",
          "typeSpec" : "$TYPE$[]"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "323379311384B0227037BF839A4A49C9",
      "code" : "
dfgEntry {
	array.resize(count);
  for(Size i=0;i<count;i++)
    array[i] = element;
}
"
      },
    "Fabric.Exts.Geometry.Func.Size" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.4.0/HTML/KLExtensionsGuide/Geometry/GeometryAttribute.html",
        "uiTooltip" : "Returns the size of the attribute array.\n\n Supported by GeometryAttribute,GeometryAttributes,BaseAttribute,SkinningAttributeData,Points"
        },
      "title" : "Size",
      "ports" : [
        {
          "objectType" : "ExecPort",
          "name" : "exec",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "ExecPort",
          "name" : "this",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "ExecPort",
          "name" : "result",
          "nodePortType" : "In",
          "execPortType" : "Out",
          "typeSpec" : "Size"
          }
        ],
      "extDeps" : {
        "Geometry" : "*"
        },
      "presetGUID" : "3426735D9D96DD0F52A2A961A393053A",
      "code" : "require Geometry;

dfgEntry {
  result = this.size();
}
"
      }
    },
  "args" : [
    {
      "type" : "Scalar[]",
      "value" : null
      },
    {
      "type" : "Scalar",
      "value" : null
      },
    {
      "type" : "Boolean",
      "value" : null
      },
    {
      "type" : "Scalar[]",
      "value" : null
      }
    ]
  }